{"version":3,"file":"static/js/680.03a91116.chunk.js","mappings":"+SAQO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,sBADd,cACCC,EADD,yBAGEA,EAAKC,MAHP,kEANPF,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBG,QAAS,oCASJ,IAAMC,EAAe,mCAAG,WAAMC,GAAN,uFACVL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,qBADU,cACvBJ,EADuB,yBAGtBA,EAAKC,MAHiB,2CAAH,sDAMrB,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcP,EAAAA,EAAAA,IAAA,6BAAgCO,IAD9C,cACCN,EADD,yBAGEA,EAAKC,MAHP,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACcL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADd,cACCJ,EADD,yBAGEA,EAAKC,MAHP,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,uFACcL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADd,cACCJ,EADD,yBAGEA,EAAKC,MAHP,kE,4EC7BMQ,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,yBAGf,C,oDCUD,IAnBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,OAIR,C,kHCeD,UA5BiB,WACf,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAa,GADf,mBAGuB9B,EAAAA,EAAAA,MAHvB,OAGUE,EAHV,OAII0B,EAAkB1B,EAAK8B,SAJ3B,gDAMIC,QAAQC,MAAR,MANJ,yBAQIJ,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,KAGD,6BACE,wBAAI,mBACHN,IAAa,SAAC,IAAD,KACd,SAAC,IAAD,CAAYb,OAAQW,MAGzB,C","sources":["api.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: '64402845586832b1fcc80d4c6361d650',\n};\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(`trending/movie/day`);\n\n  return resp.data;\n}\n\nexport const fetchMoviesById = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}?&language=en-US`);\n\n  return resp.data;\n};\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const resp = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return resp.data;\n}\n\nexport async function fetchCastMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/credits`);\n\n  return resp.data;\n}\nexport async function fetchReviwsMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/reviews`);\n\n  return resp.data;\n}\n","import { FallingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <FallingLines\n      color=\"#4fa94d\"\n      width=\"100\"\n      visible={true}\n      ariaLabel=\"falling-lines-loading\"\n    />\n  );\n};\n","import { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\n\nimport { fetchTrendingMovies } from 'api';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      setIsLoading(true);\n      try {\n        const resp = await fetchTrendingMovies();\n        setTrendingMovies(resp.results);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {isLoading && <Loader />}\n      <MoviesList movies={trendingMovies} />\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["fetchTrendingMovies","axios","resp","data","api_key","fetchMoviesById","moviesId","fetchMoviesBySearch","searchQuery","fetchCastMovie","fetchReviwsMovie","Loader","color","width","visible","ariaLabel","movies","location","useLocation","map","movie","to","id","state","from","title","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","useEffect","results","console","error","fetchMovies"],"sourceRoot":""}