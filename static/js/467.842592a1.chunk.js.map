{"version":3,"file":"static/js/467.842592a1.chunk.js","mappings":"mTAQO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,sBADd,cACCC,EADD,yBAGEA,EAAKC,MAHP,kEANPF,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBG,QAAS,oCASJ,IAAMC,EAAe,mCAAG,WAAMC,GAAN,uFACVL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,qBADU,cACvBJ,EADuB,yBAGtBA,EAAKC,MAHiB,2CAAH,sDAMrB,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcP,EAAAA,EAAAA,IAAA,6BAAgCO,IAD9C,cACCN,EADD,yBAGEA,EAAKC,MAHP,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACcL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADd,cACCJ,EADD,yBAGEA,EAAKC,MAHP,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,uFACcL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADd,cACCJ,EADD,yBAGEA,EAAKC,MAHP,kE,6HCjBP,EAZmB,SAAC,GAAqD,IAAD,IAAlDQ,KAAQC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,UAAaC,EAAS,EAATA,GAC7D,OACE,yBACE,4BACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAUL,GAAeM,IAAI,eAAeC,MAAO,WAC7D,wBAAKN,KACL,yBAAG,aAAWC,SAJTC,EAQZ,E,oCC4BD,EAlCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOT,EAAP,KAAaU,EAAb,KACQf,GAAagB,EAAAA,EAAAA,MAAbhB,SACR,GAA0Bc,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BhB,EAAAA,EAAAA,IAAeH,GAF1C,OAEUoB,EAFV,OAGIL,EAAQK,EAASf,MAHrB,gDAKIgB,QAAQJ,MAAR,MACAC,GAAS,GANb,0DADc,uBAAC,WAAD,wBAUdI,EACD,GAAE,CAACtB,KAGF,gCACGiB,IAAS,SAAC,UAAD,IACTZ,IACC,0BACE,wBACGA,EAAKkB,KAAI,SAACC,EAAOf,GAChB,OAAO,SAAC,EAAD,CAAYJ,KAAMmB,EAAOC,MAAOhB,GACxC,UAMZ,C,0CC9BD,UARqB,WACnB,OACE,0BACE,wBAAI,uDAGT,C,oBCFD,IAHkB,SAAAiB,GAChB,OAAOA,EAAG,yCAAqCA,GAF9B,qEAGlB,C","sources":["api.js","components/CastItem/CastDetail.jsx","components/Cast/Cast.jsx","components/ErrorMessages/ErrorMessages.jsx","getDefaultImg.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: '7194b7b08f433157032a7a5a310c946f',\n};\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(`trending/movie/day`);\n\n  return resp.data;\n}\n\nexport const fetchMoviesById = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}?&language=en-US`);\n\n  return resp.data;\n};\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const resp = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return resp.data;\n}\n\nexport async function fetchCastMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/credits`);\n\n  return resp.data;\n}\nexport async function fetchReviwsMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/reviews`);\n\n  return resp.data;\n}\n","import getPoster from 'getDefaultImg';\n\nconst CastDetail = ({ cast: { profile_path, name, character }, id }) => {\n  return (\n    <li key={id}>\n      <div>\n        <img src={getPoster(profile_path)} alt=\"Foto_profile\" width={'300px'} />\n        <h3>{name}</h3>\n        <p>Character:{character}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default CastDetail;\n","import CastDetail from 'components/CastItem/CastDetail';\nimport ErrorMessage from 'components/ErrorMessages/ErrorMessages';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastMovie } from 'api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { moviesId } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastInf() {\n      try {\n        const respCast = await fetchCastMovie(moviesId);\n        setCast(respCast.cast);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      }\n    }\n    fetchCastInf();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <ErrorMessage />}\n      {cast && (\n        <div>\n          <ul>\n            {cast.map((actor, id) => {\n              return <CastDetail cast={actor} index={id} />;\n            })}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const ErrorMessage = () => {\n  return (\n    <div>\n      <h3> Oops....Not found page! Please reload the page !</h3>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","const defaultImgURL = `https://image.tmdb.org/t/p/original/wwemzKWzjKYJFfCeiB57q3r4Bcm.svg`;\nconst getPoster = url => {\n  return url ? `https://image.tmdb.org/t/p/w300${url}` : defaultImgURL;\n};\nexport default getPoster;\n"],"names":["fetchTrendingMovies","axios","resp","data","api_key","fetchMoviesById","moviesId","fetchMoviesBySearch","searchQuery","fetchCastMovie","fetchReviwsMovie","cast","profile_path","name","character","id","src","getPoster","alt","width","useState","setCast","useParams","error","setError","useEffect","respCast","console","fetchCastInf","map","actor","index","url"],"sourceRoot":""}