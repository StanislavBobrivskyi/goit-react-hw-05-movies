{"version":3,"file":"static/js/459.11c3b552.chunk.js","mappings":"mTAQO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,sBADd,cACCC,EADD,yBAGEA,EAAKC,MAHP,kEANPF,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBG,QAAS,oCASJ,IAAMC,EAAe,mCAAG,WAAMC,GAAN,uFACVL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,qBADU,cACvBJ,EADuB,yBAGtBA,EAAKC,MAHiB,2CAAH,sDAMrB,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcP,EAAAA,EAAAA,IAAA,6BAAgCO,IAD9C,cACCN,EADD,yBAGEA,EAAKC,MAHP,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACcL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADd,cACCJ,EADD,yBAGEA,EAAKC,MAHP,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAgCJ,GAAhC,uFACcL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,aADd,cACCJ,EADD,yBAGEA,EAAKC,MAHP,kE,0CCvBP,UARqB,WACnB,OACE,0BACE,wBAAI,uDAGT,C,6HCOD,EAbqB,SAAC,GAAyC,IAAD,IAAtCQ,OAAUC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,QAAWC,EAAS,EAATA,GACnD,OACE,+BACE,2BACE,0BAAI,YACM,0BAAOF,QAEjB,uBAAIC,MAJGC,IAQd,E,2BC6BD,EAlCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQX,GAAaY,EAAAA,EAAAA,MAAbZ,SACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BX,EAAAA,EAAAA,IAAiBJ,GAF/C,OAEUgB,EAFV,OAGIL,EAAWK,EAAYC,SAH3B,gDAKIC,QAAQL,MAAR,MACAC,GAAS,GANb,0DADc,uBAAC,WAAD,wBAUdK,EACD,GAAE,CAACnB,KAGF,gCACGa,IAAS,SAAC,UAAD,IACTH,IACC,0BACE,wBACGA,EAAQU,KAAI,SAACf,EAAQgB,GACpB,OAAO,SAAC,EAAD,CAAchB,OAAQA,EAAQgB,MAAOA,GAC7C,UAMZ,C","sources":["api.js","components/ErrorMessages/ErrorMessages.jsx","components/ReviewDetail/ReviewDetail.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n  api_key: '7194b7b08f433157032a7a5a310c946f',\n};\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(`trending/movie/day`);\n\n  return resp.data;\n}\n\nexport const fetchMoviesById = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}?&language=en-US`);\n\n  return resp.data;\n};\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const resp = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return resp.data;\n}\n\nexport async function fetchCastMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/credits`);\n\n  return resp.data;\n}\nexport async function fetchReviwsMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/reviews`);\n\n  return resp.data;\n}\n","const ErrorMessage = () => {\n  return (\n    <div>\n      <h3> Oops....Not found page! Please reload the page !</h3>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","const ReviewDetail = ({ review: { author, content }, id }) => {\n  return (\n    <>\n      <li key={id}>\n        <h3>\n          Author: <span>{author}</span>\n        </h3>\n        <p>{content}</p>\n      </li>\n    </>\n  );\n};\n\nexport default ReviewDetail;\n","import ErrorMessage from 'components/ErrorMessages/ErrorMessages';\nimport ReviewDetail from 'components/ReviewDetail/ReviewDetail';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviwsMovie } from 'api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastInf() {\n      try {\n        const respReviews = await fetchReviwsMovie(moviesId);\n        setReviews(respReviews.results);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      }\n    }\n    fetchCastInf();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <ErrorMessage />}\n      {reviews && (\n        <div>\n          <ul>\n            {reviews.map((review, index) => {\n              return <ReviewDetail review={review} index={index} />;\n            })}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["fetchTrendingMovies","axios","resp","data","api_key","fetchMoviesById","moviesId","fetchMoviesBySearch","searchQuery","fetchCastMovie","fetchReviwsMovie","review","author","content","id","useState","reviews","setReviews","useParams","error","setError","useEffect","respReviews","results","console","fetchCastInf","map","index"],"sourceRoot":""}